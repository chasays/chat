// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: auth_user_management.sql

package sqlc_queries

import (
	"context"
)

const getRateLimit = `-- name: GetRateLimit :one
SELECT COALESCE(rate_limit, 100) AS rate_limit
FROM auth_user_management
WHERE user_id = $1
`

func (q *Queries) GetRateLimit(ctx context.Context, userID int32) (int32, error) {
	row := q.db.QueryRowContext(ctx, getRateLimit, userID)
	var rate_limit int32
	err := row.Scan(&rate_limit)
	return rate_limit, err
}
